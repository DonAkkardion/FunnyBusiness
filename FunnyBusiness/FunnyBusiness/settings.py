"""
Django settings for FunnyBusiness project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from dotenv import load_dotenv
from pathlib import Path
import os
import mimetypes

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rkegworgfwoifdoijwfoidjfwoicmvwoduijhfowjmjfoiwmjfoidmfwoi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['FunnyBusiness.eba-qtpx2vt2.us-west-2.elasticbeanstalk.com']
ALLOWED_HOSTS = []                

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'puml_generator',
    'main',
    'customers',
    'Services',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'FunnyBusiness.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FunnyBusiness.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'customers.CustomUser'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


MINIO_ENV_FILE = 'minio.env'


# Load environment variables from minio.env
load_dotenv(MINIO_ENV_FILE)

# MinIO settings
MINIO_PUBLIC_URL = 'http://192.168.0.175:9000'


DEFAULT_FILE_STORAGE = 'FunnyBusiness.storage_backend.CustomS3Boto3Storage'
# MINIO_ACCESS_KEY_ID = MINIO_ROOT_USER
# MINIO_SECRET_ACCESS_KEY = MINIO_ROOT_PASSWORD
# MINIO_ENDPOINT = MINIO_SERVER_URL
# MINIO_BUCKET_NAME = MINIO_BUCKET_NAME
# MINIO_USE_HTTPS = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/funnybusinessstorage/static/'

# STATIC_ROOT = 'static/FunnyBusiness'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# MEDIA_URL = MINIO_ENDPOINT + '/funnybusinessstorage/media/'

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
    # BASE_DIR / "static",
)


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# MinIO settings

# MINIO_S3_REGION_NAME = 'your-region'  # e.g., 'us-east-1'


# AWS S3 settings

# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

AWS_ACCESS_KEY_ID = os.getenv('MINIO_ROOT_USER')

AWS_SECRET_ACCESS_KEY = os.getenv('MINIO_ROOT_PASSWORD')

AWS_STORAGE_BUCKET_NAME = os.getenv('MINIO_BUCKET_NAME')

AWS_S3_ENDPOINT_URL = os.getenv('MINIO_SERVER_URL')

# AWS_QUERYSTRING_AUTH = False

mimetypes.add_type("text/css", ".css", True)
mimetypes.add_type("text/javascript", ".js", True)
mimetypes.add_type("application/javascript", ".js", True)


BLOCKCHAIN_ENDPOINT_URL = "http://blockchain-app:80/" ##- compose path
# BLOCKCHAIN_ENDPOINT_URL = "http://localhost:80/"